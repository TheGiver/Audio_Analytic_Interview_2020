# Device details:
Type: Macbook Pro 2017
OS: macOS Big Sur version 11.1
Processor: 3.5 GHz Dual-Core Intel Core i7

# Libraries used:
a. <stdio.h>
b. <stdbool.h>
c. <stdlib.h>
d. <string.h>
e. <math.h>

# Makefile details:
## Command No.1:
	make test_cluster_for_memory_leaks

### Details:
The command above will build the executable unsupervised_k_means, run the program with valgrind and dump the memory leak's result into an external file with the name 'memory_leaks_test.txt'.

## Command No.2:
	make cluster

### Details:
The command above will build the executable unsupervised_k_means which can then be run independently by the user using: ./unsupervised_k_means <no_of_data_points> <no_of_centroids>

## Command No.3:
	make clean 

### Details:
The command above will clean the directory from any object files, the executable and any text files generated by the program or the valgrind command (check command no.1)

# Note about Valgrind:
I struggled to install valgrind on my device to check for any memory leaks. 
I tried to install the program using 'brew install valgrind'. However, the command always returned an error saying that valgrind required linux. Therefore, I could not test for any memory leaks. 

# Running the bashscrip 'build_and_run.sh':
Within the many files included in the deliverable there is one with the name 'build_and_run.sh'. This script can be used to build the executable unsupervised_k_means and run the program with 
the appropriate command line arguments which include the total number of data points and total number of centroids that are available in the csv files provided. After running the script, you 
would have to run 'make clean' in order to clean the directory from the files specified in the Command No.3 subsection of the Makefile Details section. 
